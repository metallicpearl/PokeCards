import type { CSSProperties, RefObject, ReactElement, FormEvent, ChangeEvent, FocusEvent, KeyboardEvent } from 'react';
export type TextAreaProps = {
    visible?: boolean;
    onChange?: (e: ChangeEvent<HTMLInputElement>) => void;
    onBlur?: (e: FocusEvent<HTMLTextAreaElement>) => void;
    onFocus?: (e: FocusEvent<HTMLTextAreaElement>) => void;
    value?: string;
    onKeyDown?: (e: KeyboardEvent<HTMLTextAreaElement>) => void;
    style?: CSSProperties;
    onInput?: (e: FormEvent<HTMLTextAreaElement>) => string;
    defaultValue?: string;
    placeholder?: string;
    className?: string;
    reference?: RefObject<HTMLTextAreaElement>;
    isError?: boolean;
    automationId?: string;
    size?: 'small' | 'medium' | 'large';
    type?: 'outline' | 'filledDarker' | 'filledLighter';
    takeContainerHeight?: boolean;
    canGrow?: boolean;
    maxGrowHeight?: number;
};
export declare const TextArea: (props: TextAreaProps) => ReactElement;

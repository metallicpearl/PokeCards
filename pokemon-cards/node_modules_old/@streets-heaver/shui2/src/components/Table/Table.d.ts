import type { ReactElement, ReactNode, MouseEvent } from 'react';
export type TableProps = {
    data: [];
    columns: columnDef[];
    selected?: SelectedIndexes;
    onSelectionChange?: (updater: ((old: SelectedIndexes) => SelectedIndexes) | SelectedIndexes) => void;
    onColumnResize?: (row: {
        id: string;
        newSize: number;
    }) => void;
    hasMoreRows?: boolean;
    noDataMessage?: string;
    fetchNextPage?: () => void;
    shouldFetchNextPage?: boolean;
    virtualizerOptions?: virtualizeroption;
    fillContainerHeight?: boolean;
    onRowClick?: () => void;
    isCollapsed?: boolean;
    setIsCollasped?: boolean;
    shownColumns?: ShownColumn[];
    setShownColumns?: () => void;
    onFiltersClick?: (e: MouseEvent<HTMLDivElement>) => void;
    filtersCount?: number;
    isExpanding?: boolean;
    expandedRowComponent?: ReactNode;
    automationId?: string;
};
export type virtualizeroption = {
    estimateRowHeight?: number;
    overscan?: number;
};
export type SelectedIndexes = {
    [index: number]: boolean;
};
export type ShownColumn = {
    header: string;
};
export type columnDef = {
    header: string;
    accessorKey: string;
    size: number;
};
export declare const Table: (props: TableProps) => ReactElement;
